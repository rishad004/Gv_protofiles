syntax = "proto3";

package streamer;

option go_package = "github.com/rishad004/project-gv/streamer-service";

service StreamerService {
    rpc Registration(RegistrationRequest) returns (RegistrationResponse);
    rpc ChannelView(Verification) returns (ChannelResponse);
    rpc EditChannel(EditRequest) returns (EditResponse);
    rpc SubscriptionSet(SubscriptionRequest) returns (SubscriptionResponse);
    rpc SubscriptionCheck(Verification) returns (CheckingResponse);
    rpc SubscriptionList(Empty) returns (ListResponse);
    rpc FindByStreamKey(StreamKeyRequest) returns (StreamKeyResponse);
    rpc StreamStart(StreamKeyResponse) returns (Empty);
    rpc StreamEnd(StreamKeyResponse) returns (Empty);
    rpc GettingFollowed(Verification) return (Empty);
}

message RegistrationRequest {
    string name = 1;
    string description = 2;
    int32 userid = 3;
}

message RegistrationResponse {
    string message = 1;
    string streamkey = 2;
}

message Verification {
    int32 userid = 1;
    int32 id = 2;
}

message ChannelResponse {
    int32 id = 1;
    string name = 2;
    string description = 3;
    string streamkey = 4;
}

message EditRequest {
    string name = 1;
    string description = 2;
    int32 userid = 3;
}

message EditResponse {
    string message = 1;
}

message SubscriptionRequest {
    int32 userid = 1;
    int32 amount = 2;
}

message SubscriptionResponse {
    string message = 1;
}

message CheckingResponse {
    int32 amount = 1;
    int32 sid = 2;
}

message Empty {}

message SubscriptionList {
    int32 streamerid = 1;
    string channel = 2;
    int32 subscriptionid = 3;
}

message ListResponse {
    repeated SubscriptionList list = 1;
}

message StreamKeyRequest {
    string channel = 2;
}

message StreamKeyResponse {
    int32 id = 1;
    string streamkey = 2;
    string title = 3;
    string description = 4;
}